import pandas as pd
import matplotlib.pyplot as plt
from io import StringIO
import os

# -----------------------
# 原始训练数据 CSV
# -----------------------
data = """
epoch,train_loss,train_acc,acc_2,acc_4,acc_10,acc_50,acc_100,acc_200,top5_acc_10,top5_acc_50,top5_acc_100,top5_acc_200
1,12.369896345424744,0.0,0.49,0.23,0.1,0.03,0.01,0.01,0.51,0.12,0.065,0.025
2,5.2852971609195,0.0,0.885,0.715,0.55,0.245,0.145,0.09,0.97,0.58,0.405,0.295
3,3.5538253274107023,0.0,0.92,0.835,0.69,0.365,0.285,0.215,0.98,0.76,0.595,0.425
4,3.0682049508477918,0.0,0.935,0.845,0.7,0.405,0.3,0.23,0.985,0.81,0.665,0.51
5,2.886937792511208,0.0,0.94,0.86,0.775,0.525,0.375,0.275,0.99,0.81,0.73,0.58
6,2.7464557167175085,1.5125847047434657e-05,0.97,0.87,0.765,0.425,0.36,0.25,0.995,0.885,0.77,0.59
7,2.622649569479101,0.0,0.96,0.87,0.775,0.525,0.42,0.29,1.0,0.865,0.75,0.635
8,2.4990528244939916,0.0,0.95,0.88,0.74,0.525,0.405,0.31,0.99,0.865,0.735,0.63
9,2.3811916887240856,1.5125847047434657e-05,0.955,0.91,0.795,0.505,0.42,0.33,0.995,0.875,0.79,0.625
10,2.267724398721915,0.0,0.95,0.9,0.79,0.515,0.435,0.325,0.99,0.85,0.755,0.675
11,2.158148833765988,0.0,0.95,0.885,0.8,0.57,0.455,0.355,0.98,0.85,0.81,0.67
12,2.0639571170723796,0.0,0.945,0.93,0.815,0.555,0.45,0.32,0.98,0.88,0.8,0.665
13,1.9738193587665982,0.0,0.97,0.935,0.785,0.55,0.455,0.335,0.995,0.87,0.775,0.685
14,1.8940472001604742,0.0,0.955,0.925,0.81,0.545,0.44,0.33,1.0,0.895,0.79,0.715
15,1.7986255231000563,0.0,0.96,0.895,0.78,0.525,0.44,0.345,0.995,0.865,0.775,0.68
16,1.7271860759463684,0.0,0.96,0.94,0.845,0.575,0.485,0.345,0.995,0.9,0.81,0.705
17,1.6585298618527142,1.5125847047434657e-05,0.975,0.92,0.815,0.545,0.425,0.31,0.995,0.88,0.775,0.68
18,1.59713082576652,1.5125847047434657e-05,0.96,0.945,0.785,0.555,0.475,0.365,1.0,0.895,0.785,0.68
19,1.527227306181325,1.5125847047434657e-05,0.97,0.875,0.805,0.6,0.49,0.39,1.0,0.89,0.805,0.675
20,1.473770944735203,1.5125847047434657e-05,0.985,0.935,0.81,0.575,0.495,0.345,0.99,0.88,0.815,0.69
21,1.4270333269789512,0.0,0.96,0.87,0.82,0.555,0.485,0.385,0.995,0.86,0.795,0.69
22,1.3730747341994278,0.0,0.97,0.92,0.835,0.615,0.515,0.365,0.99,0.875,0.795,0.705
23,1.3257832529468665,0.0,0.955,0.9,0.835,0.53,0.465,0.36,0.99,0.895,0.82,0.7
24,1.2847583611844702,0.0,0.96,0.93,0.805,0.595,0.49,0.355,0.995,0.895,0.81,0.7
25,1.2452405812317957,1.5125847047434657e-05,0.965,0.905,0.86,0.56,0.49,0.385,0.98,0.885,0.81,0.7
26,1.2070962267946759,0.0,0.96,0.93,0.835,0.61,0.495,0.38,0.995,0.9,0.795,0.715
27,1.1694667217576837,0.0,0.975,0.895,0.78,0.54,0.465,0.335,1.0,0.885,0.785,0.69
28,1.141402572999273,0.0,0.98,0.93,0.82,0.595,0.515,0.39,1.0,0.885,0.78,0.725
29,1.1093679227418152,0.0,0.975,0.91,0.825,0.58,0.455,0.355,0.995,0.89,0.81,0.69
30,1.0699565263477668,1.5125847047434657e-05,0.955,0.905,0.77,0.595,0.495,0.35,0.99,0.885,0.805,0.68
31,1.056885114886292,0.0,0.97,0.91,0.825,0.555,0.42,0.34,0.985,0.9,0.81,0.685
32,1.0274287946918927,0.0,0.99,0.92,0.8,0.57,0.485,0.37,1.0,0.88,0.79,0.69
33,1.001667189978907,1.5125847047434657e-05,0.975,0.895,0.825,0.575,0.445,0.385,0.995,0.92,0.815,0.675
34,0.9766319744353834,0.0,0.945,0.91,0.805,0.55,0.43,0.34,0.995,0.915,0.79,0.68
35,0.9549927286810935,1.5125847047434657e-05,0.97,0.91,0.82,0.6,0.475,0.39,1.0,0.86,0.79,0.7
36,0.935132670206345,0.0,0.965,0.915,0.82,0.585,0.465,0.335,0.985,0.865,0.795,0.7
37,0.915296095730836,0.0,0.96,0.915,0.81,0.565,0.435,0.375,0.99,0.895,0.82,0.71
38,0.9044247591599375,0.0,0.96,0.91,0.8,0.585,0.425,0.34,0.99,0.9,0.805,0.7
39,0.8889840001462159,0.0,0.965,0.91,0.825,0.605,0.53,0.4,0.995,0.9,0.82,0.725
40,0.8746796512015215,1.5125847047434657e-05,0.975,0.94,0.865,0.57,0.445,0.35,0.99,0.915,0.84,0.73

"""  # 这里只放了前6行示例，实际可放完整40行

# -----------------------
# 读取训练数据
# -----------------------
df = pd.read_csv(StringIO(data))

# -----------------------
# 绘制训练曲线
# -----------------------
fig, axs = plt.subplots(2, 1, figsize=(12, 12))

# loss 曲线
axs[0].plot(df['epoch'], df['train_loss'], label='Train Loss', color='red')
axs[0].set_title('Training Loss Over Epochs')
axs[0].set_xlabel('Epoch')
axs[0].set_ylabel('Loss')
axs[0].legend()
axs[0].grid(True)

# accuracy 曲线
acc_columns = [col for col in df.columns if col.startswith('acc_') or col.startswith('top5_acc_')]
for col in acc_columns:
    axs[1].plot(df['epoch'], df[col], label=col)
axs[1].set_title('Accuracy Metrics Over Epochs')
axs[1].set_xlabel('Epoch')
axs[1].set_ylabel('Accuracy')
axs[1].legend()
axs[1].grid(True)

plt.tight_layout()

# -----------------------
# 保存训练曲线图
# -----------------------
save_dir = "/shared/aia/alg/wangchun/EEG-Diffusion/figures/EEGEncoder/sub-08/08-15_11-52"
os.makedirs(save_dir, exist_ok=True)
train_curve_path = os.path.join(save_dir, "EEGFEncoder_training_plot.png")
plt.savefig(train_curve_path, dpi=300)
print(f"训练曲线已保存到 {train_curve_path}")

# -----------------------
# 生成统计信息（排除 epoch 和 train_loss）
# -----------------------
stats_df = df.drop(columns=['epoch', 'train_loss', 'train_acc']).describe().T

# 保存统计信息 CSV
stats_csv_path = os.path.join(save_dir, "statistics_summary.csv")
stats_df.to_csv(stats_csv_path)
print(f"统计信息表格已保存到 {stats_csv_path}")

# -----------------------
# 绘制统计信息图
# -----------------------
fig, ax = plt.subplots(figsize=(14, 8))

# 平均值 ± 标准差条形图
ax.bar(stats_df.index, stats_df['mean'], yerr=stats_df['std'], capsize=5, color='skyblue', label='Mean ± Std')

# 最大值和最小值折线
ax.plot(stats_df.index, stats_df['max'], color='red', marker='o', linestyle='--', label='Max')
ax.plot(stats_df.index, stats_df['min'], color='green', marker='o', linestyle='--', label='Min')

ax.set_title('Statistics Summary of Training Metrics', fontsize=16)
ax.set_ylabel('Value')
ax.set_xticklabels(stats_df.index, rotation=45, ha='right')
ax.grid(axis='y', linestyle='--', alpha=0.7)
ax.legend()

plt.tight_layout()
stats_plot_path = os.path.join(save_dir, "statistics_summary_plot.png")
plt.savefig(stats_plot_path, dpi=300)
print(f"统计信息图已保存到 {stats_plot_path}")

# 如果需要显示图像可以取消下面的注释
# plt.show()
